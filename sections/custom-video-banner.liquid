{% assign text_animation = section.settings.text_animation %}

{%- style -%}
  .hero__text-wrap--absolute{
  position: absolute !important;
  width: 100%;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 2;
  display: flex;
  align-items: center;
  justify-content: center;
}

.hero__text-wrap--absolute .hero-text-page-width {
  display: block;
  width: 100%;
}

.hero__text-wrap--absolute .hero__text-content {
  display: block;
  padding: 20px;
}

{% if text_animation %}
.hero--{{ section.id }} .hero__title, .hero--{{ section.id }}  .hero__subtitle, .hero--{{ section.id }}  .hero__link{
    animation: 2s cubic-bezier(.26,.54,.32,1) .3s forwards;
    animation-name: rise-up; 
}
{% endif %}
  
.hero--{{ section.id }} .hero__media, .hero--{{ section.id }} .hero__media iframe{
    width: 100%;
    height: 100%;
}
  
.hero--{{ section.id }} .hero__title {
  font-size: {{ section.settings.title_size | times: 0.5 }}px;
  margin: 30px 0 0 0;
}

  .hero__subtitle{
    overflow-wrap: anywhere;
  }
  
@media only screen and (min-width: 769px) {
  .hero--{{ section.id }} .hero__title {
  font-size: {{ section.settings.title_size }}px;
  }
  .hero__subtitle{
  font-size: {{ section.settings.title_size | times: 0.5 }}px;
  }
}

.hero__link{
  display: block;
  padding-top: 10px;
}

{% if section.settings.overlay_opacity > 0 %}
  .hero--{{ section.id }} .hero__text-wrap:after {
  content: '';
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  background-color: #000;
  opacity: {{ section.settings.overlay_opacity | divided_by: 100.0 }};
  z-index: -1;
  }
{% endif %}
  
.video-parent-section{
  overflow: hidden;
  position: relative;
}

.hero__media .video-div{
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: -1;
}

.hero--450px{
  height:292.5px;
}

.hero--550px{
  height:357.5px;
}

.hero--650px{
  height:422.5px;
}

.hero--750px{
  height:487.5px;
}

.hero--100vh{
  height:100vh;
}
/* Data attributes included */
@media only screen and (min-width:590px){
  .hero--natural[data-natural]{
    position:absolute;
    top:0;
    left:0;
    right:0;
    bottom:0;
  }
  .hero--450px{
    height:450px;
  }
  .hero--550px{
    height:550px;
  }
  .hero--650px{
    height:650px;
  }
  .hero--750px{
    height:750px;
  }
  .hero--16-9{
    height:0;
    padding-bottom:56.25%;
  }
}

/* Data attributes included */
@media only screen and (max-width:589px){
  .hero--mobile--auto[data-mobile-natural=true]{
    position:absolute;
    top:0;
    left:0;
    right:0;
    bottom:0;
    height:auto;
  }
  .hero--16-9.hero--mobile--auto{
    height:0;
    padding-bottom:56.25%;
  }
  .hero--natural[data-mobile-natural=false]{
    height:500px;
  }
  .hero--mobile--250px[data-mobile-natural=false]{
    height:250px;
  }
  .hero--mobile--300px[data-mobile-natural=false]{
    height:300px;
  }
  .hero--mobile--400px[data-mobile-natural=false]{
    height:400px;
  }
  .hero--mobile--500px[data-mobile-natural=false]{
    height:500px;
  }
  .hero--mobile--100vh[data-mobile-natural=false]{
    height:90vh;
  }
}

.hero__text-wrap{
  position:relative;
  height: 100%;
}

.hero__text-wrap .hero-text-page-width {
    display: table;
    width: 100%;
    height: 100%;
}

{% if section.settings.video_url == blank %}
.hero__title, .hero__subtitle, .animation-contents{
  color: #000;
  opacity: 1;
}
{% endif %}


        /* Hero-video */
.hero__text-content{
  position: relative;
  padding: 20px;
  display: table-cell;
}

@media only screen and (min-width:590px){
  .hero__text-content{
    padding: 60px;
  }
}

.hero__text-content.horizontal-left{
    text-align:left;
  }

.hero__text-content.horizontal-center{
    text-align:center;
  }

.hero__text-content.horizontal-right{
    text-align:right;
  }

.hero__text-content.vertical-center{
    vertical-align:middle
  }

.hero__text-content.vertical-center .hero__subtitle{
      margin-right:0;
    }

.hero__text-content.vertical-center .hero__link{
      display:block
    }

@media only screen and (min-width:590px){

.hero__text-content.vertical-center .hero__link{
        margin-top:20px
    }
      }

.hero__text-content.vertical-center .hero__link .btn{
        margin-left:0;
      }

.hero__text-content.vertical-bottom{
    vertical-align:bottom;
  }

.hero__media video{
    object-fit: cover;
}

.hero__link .btn{
  /* CSS Variables */
  --shadow-horizontal-offset: var(--buttons-shadow-horizontal-offset, 0);
  --shadow-vertical-offset: var(--buttons-shadow-vertical-offset, 4px);
  --shadow-blur-radius: var(--buttons-shadow-blur-radius, 5px);
  --shadow-opacity: var(--buttons-shadow-opacity, 0.3);
  --shadow-visible: var(--buttons-shadow-visible, 1);
  --border-offset: var(--buttons-border-offset, 0);
  --border-opacity: calc(1 - var(--buttons-border-opacity, 0.1));
  --color-button-text: var(--color-base-outline-button-labels, 255, 255, 255);
  --color-button: var(--color-background, 18, 18, 18);
  --alpha-button-background: 1;
  
  /* Display and Layout */
  display: inline-flex;
  justify-content: center;
  align-items: center;
  position: relative;
  
  /* Styling */
  border: 0;
  border-radius: var(--buttons-radius-outset, 0);
  padding: 0 3rem;
  cursor: pointer;
  font: inherit;
  font-size: 1.5rem;
  text-decoration: none;
  color: rgb(var(--color-button-text));
  background-color: rgba(var(--color-button), var(--alpha-button-background));
  transition: box-shadow var(--duration-short, 0.1s) ease;
  -webkit-appearance: none;
  appearance: none;
  min-width: calc(12rem + var(--buttons-border-width, 0) * 2);
  min-height: calc(4.5rem + var(--buttons-border-width, 0) * 2);
}

.hero__link .button--secondary{
    --color-button: 255, 255, 255;
    --color-button-text: 255, 255, 255;
    --alpha-button-background: 0;
}

.hero__link .btn:before{
  content: '';
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: -1;
  border-radius: var(--buttons-radius-outset, 0);
  box-shadow: var(--shadow-horizontal-offset) var(--shadow-vertical-offset) var(--shadow-blur-radius) rgba(var(--color-shadow, 18, 18, 18), var(--shadow-opacity));
  font-size: 1.5rem;
  letter-spacing: 0.1rem;
  line-height: calc(1 + 0.2 / var(--font-body-scale, 1));
}

.hero__link .btn:hover::after {
  --border-offset: 1.3px;
  box-shadow: 0 0 0 calc(var(--buttons-border-width, 0) + var(--border-offset)) rgba(var(--color-button-text), var(--border-opacity)), 0 0 0 calc(var(--buttons-border-width, 0) + 1px) rgba(var(--color-button), var(--alpha-button-background));
}
  
.hero__link .btn:after{
  content: '';
  position: absolute;
  top: var(--buttons-border-width, 0);
  right: var(--buttons-border-width, 0);
  bottom: var(--buttons-border-width, 0);
  left: var(--buttons-border-width, 0);
  z-index: 1;
  border-radius: var(--buttons-radius, 0);
  box-shadow: 0 0 0 calc(var(--buttons-border-width, 0) + var(--border-offset)) rgba(var(--color-button-text), var(--border-opacity)), 0 0 0 var(--buttons-border-width, 0) rgba(var(--color-button), var(--alpha-button-background));
  transition: box-shadow var(--duration-short, 0.1s) ease;
}

.hero__title, .hero__subtitle, .animation-contents{
  color: #fff;
  opacity: 1;
}
  
{%- endstyle -%}

<div
  data-section-id="{{ section.id }}"
  data-mobile-natural="false"
  class="video-parent-section hero--{{ section.id }} hero--{{ section.settings.section_height }} hero--mobile--{{ section.settings.mobile_height }}"
  >

  <div class="hero__media hero__media--{{ section.id }}" style="position: absolute; top: 0; left: 0; z-index: -1;">

    {% if section.settings.video_url == blank  %}{% else %}
    {% assign extension = section.settings.video_url | slice: -4, 4 %}
    {% if extension == '.mp4' %}
      <video
        id="Mp4Video-{{ section.id }}"
        class="video-div"
        src="{{ section.settings.video_url }}"
        data-type="mp4"
        loop muted playsinline autoplay></video>
    {% else %}

         {% if section.settings.video_url contains 'embed' %}
        {% assign video_parts = section.settings.video_url | split: 'embed/' %}
        {% assign video_id = video_parts[1] %}
      {% else %}
        {% assign video_parts = section.settings.video_url | split: '=' %}
        {% assign video_id = video_parts[1] %}
      {% endif %}


      <style>
        #shopify-section-{{ section.id }}{
          position: relative !important;
/*           padding-bottom: 56.25% !important;
          height: 0 !important;
          max-width: 1920px !important;
          margin: 0 auto !important; */
        }
        .hero--{{ section.id }}.hero__media {
          height: 100%;
          width: 100%;
        }
        .hero--{{ section.id }} .hero__media iframe {
          position: absolute !important;
/*           top: 0 !important;
          left: 0 !important;
          width: 100% !important;
          height: 100% !important;
          max-height: 1080px !important; */
          top: 50%;
          left: 50%;
          transform: translate(-50%, -50%);
        }
      </style>

<script>
function resizeSection() {
const divElement = document.querySelector('.hero--{{ section.id }} .hero__media iframe');

function resizeDiv() {
  const containerWidth = divElement.parentNode.offsetWidth; // Get the width of the container element
  const height = containerWidth * 9 / 16; // Calculate height based on 16:9 aspect ratio

  if (height < divElement.parentNode.offsetHeight) {
    const width = divElement.parentNode.offsetHeight * 16 / 9; // Calculate width based on 16:9 aspect ratio
    divElement.style.width = width + 'px';
    divElement.style.height = divElement.parentNode.offsetHeight + 'px';
  } else {
    divElement.style.width = containerWidth + 'px';
    divElement.style.height = height + 'px';
  }
}

window.addEventListener('resize', resizeDiv);

resizeDiv();

divElement.addEventListener('load', resizeDiv);
}

function waitForElm(selector) {
    return new Promise(resolve => {
        if (document.querySelector(selector)) {
            return resolve(document.querySelector(selector));
        }

        const observer = new MutationObserver(mutations => {
            if (document.querySelector(selector)) {
                resolve(document.querySelector(selector));
                observer.disconnect();
            }
        });

        observer.observe(document.body, {
            childList: true,
            subtree: true
        });
    });
}
  
waitForElm('iframe#player-hero-vid-{{ section.id }}').then((elm) => {
    document.addEventListener("DOMContentLoaded", resizeSection);
    window.addEventListener("resize", resizeSection);
    document.addEventListener('shopify:section:load', resizeSection);
    elm.onload = ()=>{resizeSection()};
});

</script>

<div id="player-hero-vid-{{ section.id }}" class="js-youtube"></div>

<script>
  var tag = document.createElement('script');

  tag.src = "https://www.youtube.com/iframe_api";
  var firstScriptTag = document.getElementsByTagName('script')[0];
  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

  // console.log(firstScriptTag)
  // console.log(tag)

 
  var player;
  function onYouTubeIframeAPIReady() {
    // console.log("ready1  ")
  player = new YT.Player('player-hero-vid-{{ section.id }}', {
      height: '390',
      width: '640',
      playerVars: {
        playsinline: 1,
        controls: 0,
        showinfo: 0,
        fs: 0,
        modestbranding: 1,
        iv_load_policy: 1
      },
      videoId: '{{ video_id }}',
      events: {
        'onReady': onPlayerReady,
        'onStateChange': onPlayerStateChange
      }
    });
  }
  // console.log("ready")
  function onPlayerReady(event) {
    event.target.mute();
    event.target.playVideo();
  }

  function onPlayerStateChange(event) {
    // console.log(event)

    if (event.data == YT.PlayerState.PLAYING) {
      
      setInterval(function() {
        var duration = player.getDuration();
        var currentTime = player.getCurrentTime();
        // console.log(duration, " -- -", currentTime)

        if (duration - currentTime <= 1) {
          player.seekTo(0);
        }
      }, 500);
    }

    
    if(event.data === YT.PlayerState.ENDED){
        event.target.playVideo();
    }
  }



  document.addEventListener('shopify:section:load', ()=>{

  var player;
    player = new YT.Player('player-hero-vid-{{ section.id }}', {
      height: '390',
      width: '640',
      playerVars: {
        playsinline: 1,
        controls: 0,
        showinfo: 0,
        fs: 0,
        modestbranding: 1,
        iv_load_policy: 1
      },
      videoId: '{{ video_id }}',
      events: {
        'onReady': onPlayerReady,
        'onStateChange': onPlayerStateChange
      }
    });
  

  });
</script>
      
    {%- endif -%}
{% endif %}
</div>


  

  <div class="hero__text-wrap{% if section.settings.section_height == '16-9' %} hero__text-wrap--absolute{% endif %}">
    <div class="hero-text-page-width">
      <div class="hero__text-content {{ section.settings.text_align }}">
        {%- unless section.settings.title == blank -%}
          <h2 class="hero__title">
            <div class="animation-contents">
            {{ section.settings.title | newline_to_br }}
            </div>
          </h2>
        {%- endunless -%}
        {%- unless section.settings.subheading == blank -%}
          <div class="hero__subtitle">
            <div class="animation-contents">
              {{ section.settings.subheading | escape }}
            </div>
          </div>
        {%- endunless -%}
        {%- if section.settings.link_text != blank -%}
          {%- assign link_href = section.settings.link -%}
          {%- if section.settings.link == blank -%}
            {%- assign link_href = section.settings.video_url -%}
          {%- endif -%}

          <div class="hero__link">
              <div class="animation-contents">
                <a href="{{ link_href }}" class="btn{% if section.settings.button_style_secondary_1 %} button--secondary{% endif %}"
                >
                  {{ section.settings.link_text }}
                </a>
              </div>
          </div>
        {%- endif -%}

      </div>
    </div>
  </div>
</div>

 
{% schema %}
{
  "name": "Video Hero",
  "class": "index-section--hero",
  "settings": [
    {
      "type": "textarea",
      "id": "title",
      "label": "Heading",
      "default": "Bring your\nbrand to life."
    },
    {
      "type": "range",
      "id": "title_size",
      "label": "Heading text size",
      "default": 80,
      "min": 40,
      "max": 100,
      "unit": "px"
    },
    {
      "type": "text",
      "id": "subheading",
      "label": "Subheading",
      "default": "Seamless hero videos"
    },
    {
      "type": "text",
      "id": "link_text",
      "label": "Button text",
      "default": "Optional button"
    },
        {
          "type": "checkbox",
          "id": "button_style_secondary_1",
          "default": false,
          "label": "Use outline button style"
        },
    {
      "type": "url",
      "id": "link",
      "label": "Button link"
    },
    {
      "type": "select",
      "id": "text_align",
      "label": "Text alignment",
      "default": "vertical-center horizontal-center",
      "options": [
        {
          "value": "vertical-center horizontal-left",
          "label": "Center left"
        },
        {
          "value": "vertical-center horizontal-center",
          "label": "Center"
        },
        {
          "value": "vertical-center horizontal-right",
          "label": "Center right"
        },
        {
          "value": "vertical-bottom horizontal-left",
          "label": "Bottom left"
        },
        {
          "value": "vertical-bottom horizontal-center",
          "label": "Bottom center"
        },
        {
          "value": "vertical-bottom horizontal-right",
          "label": "Bottom right"
        }
      ]
    },
    {
        "type": "checkbox",
        "id": "text_animation",
        "label": "Enable animation",
        "default": true
    },
    {
      "type": "text",
      "id": "video_url",
      "label": "Background video link",
      "default": "https://cdn.shopify.com/videos/c/o/v/458f6d3c35574fa0b18f94e5e909167a.mp4",
      "info": "Youtube or .MP4"
    },
    {
      "type": "range",
      "id": "overlay_opacity",
      "label": "Text protection",
      "info": "Darkens your image to ensure your text is readable",
      "default": 0,
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "%"
    },
    {
      "type": "select",
      "id": "section_height",
      "label": "Desktop height",
      "default": "650px",
      "options": [
        {
          "label": "16:9",
          "value": "16-9"
        },
        {
          "label": "450px",
          "value": "450px"
        },
        {
          "label": "550px",
          "value": "550px"
        },
        {
          "label": "650px",
          "value": "650px"
        },
        {
          "label": "750px",
          "value": "750px"
        },
        {
          "label": "Full screen",
          "value": "100vh"
        }
      ]
    },
    {
      "type": "select",
      "id": "mobile_height",
      "label": "Mobile height",
      "default": "auto",
      "options": [
        {
          "label": "Auto",
          "value": "auto"
        },
        {
          "label": "250px",
          "value": "250px"
        },
        {
          "label": "300px",
          "value": "300px"
        },
        {
          "label": "400px",
          "value": "400px"
        },
        {
          "label": "500px",
          "value": "500px"
        },
        {
          "label": "Full screen",
          "value": "100vh"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Video hero"
    }
  ]
}
{% endschema %}
