<head>
  <!-- Import bottom menu CSS file -->
  {{ 'bottom-menu.css' | asset_url | stylesheet_tag }}
  
  <!-- Import necessary scripts for cart and menu functionality -->
  <script
    type="module"
    src="{{ 'cart-icon.js' | asset_url }}"
    fetchpriority="low"
  ></script>
  
  <script
    type="module"
    src="{{ 'header-drawer.js' | asset_url }}"
    fetchpriority="low"
  ></script>

  <style>
    :root {
      --bottom-menu-height: {{ section.settings.height }}px;
      --bottom-menu-bg: {{ section.settings.bg_color }};
      --bottom-menu-color: {{ section.settings.color }};
      --bottom-menu-icon-color: {{ section.settings.icon_color }};
      --bottom-menu-font-size: {{ section.settings.font_size }}px;
      --bottom-menu-icon-size: {{ section.settings.icon_size }}rem;
      --icon-stroke-width: 1.5px; /* Default stroke width for line icons */
      {% if section.settings.hide-border %}
      --bottom-menu-border-color: transparent;
      {% endif %}
    }
    
    /* Dynamic background color for popups */
    .extended-menu, .collection-popup {
      background-color: {{ section.settings.bg_color }};
    }
    
    /* Dynamic text color for menu links */
    .menu-link {
      color: {{ section.settings.color }};
    }
    
    /* Apply no-borders class when hide-border is enabled */
    {% if section.settings.hide-border %}
    .sticky-section-column {
      border-right: none !important;
    }
    {% endif %}
  </style>
</head>

<body>
  <div class="sticky-section">
    {% for block in section.blocks %}
      {%- case block.type -%}
        {%- when 'block' -%}
          <div class="sticky-section-column">
            <a href="{{ block.settings.url }}" class="btm_link">
              {% if block.settings.icon_url == blank %}
                <span class="svg-wrapper" aria-hidden="true">
                  {{ 'icon-link-line.svg' | inline_asset_content }}
                </span>
              {% else %}
                {{ block.settings.icon_url }}
              {% endif %}
              {{ block.settings.caption }}
            </a>
          </div>
        {%- when 'home_block' -%}
          <div class="sticky-section-column">
            <a href="/" class="btm_link">
              {% if block.settings.icon_url == blank %}
                <span class="svg-wrapper" aria-hidden="true">
                  {{ 'home-line.svg' | inline_asset_content }}
                </span>
              {% else %}
                {{ block.settings.icon_url }}
              {% endif %}
              {{ block.settings.caption }}
            </a>
          </div>
        {%- when 'cart_block' -%}
          <div class="sticky-section-column">
            {% if settings.cart_type == 'drawer' %}
              <cart-icon class="bottom-nav-cart-icon{% unless cart == empty %} bottom-nav-cart-icon--has-cart{% endunless %}">
                <button type="button" onclick="openCartDrawer(); return false;" title="Shopping Cart" class="btm_link" aria-label="Shopping Cart ({{ cart.item_count }} items)" aria-describedby="cart-bubble-text">
                  {% render 'cart-bubble', limit: 100 %}
                  {% if block.settings.icon_url == blank %}
                    <span class="svg-wrapper" aria-hidden="true">
                      {{ 'icon-cart.svg' | inline_asset_content }}
                    </span>
                  {% else %}
                    {{ block.settings.icon_url }}
                  {% endif %}
                  {{ block.settings.caption }}
                </button>
              </cart-icon>
            {% else %}
              <cart-icon class="bottom-nav-cart-icon{% unless cart == empty %} bottom-nav-cart-icon--has-cart{% endunless %}">
                <a href="{{ routes.cart_url }}" title="Shopping Cart" class="btm_link" aria-label="Shopping Cart ({{ cart.item_count }} items)" aria-describedby="cart-bubble-text">
                  {% render 'cart-bubble', limit: 100 %}
                  {% if block.settings.icon_url == blank %}
                    <span class="svg-wrapper" aria-hidden="true">
                      {{ 'icon-cart.svg' | inline_asset_content }}
                    </span>
                  {% else %}
                    {{ block.settings.icon_url }}
                  {% endif %}
                  {{ block.settings.caption }}
                </a>
              </cart-icon>
            {% endif %}
          </div>
        {%- when 'wishlist_block' -%}
        <div class="sticky-section-column">
          <a href="/pages/wishlist" class="bottom-icon-sticky btm_link header__icon--wishlist-link">
            {% if block.settings.icon_url == blank %}
              <span class="svg-wrapper" aria-hidden="true">
                {{ 'icon-heart-line.svg' | inline_asset_content }}
              </span>
            {% else %}
              {{ block.settings.icon_url }}
            {% endif %}
            {{ block.settings.caption }}
            <!-- Enhanced wishlist counter with proper styling -->
            <div class="cart-count wishlist-total-count-bottom-menu" data-wishlist-counter-bottom style="display: none;">
              <span class="visually-hidden">Wishlist items: </span>
              <span aria-hidden="true">0</span>
            </div>
          </a>
        </div>
        {%- when 'Menu_block' -%}
          <div class="sticky-section-column sticky-section-menu-drawer">
            <button type="button" class="btm_link" data-menu-drawer-trigger aria-label="Open navigation menu">
              {% if block.settings.icon_url == blank %}
                <span class="svg-wrapper" aria-hidden="true">
                  {{ 'icon-menu.svg' | inline_asset_content }}
                </span>
              {% else %}
                {{ block.settings.icon_url }}
              {% endif %}
              {{ block.settings.caption }}
            </button>
          </div>
        {%- when 'Account_block' -%}
          <div class="sticky-section-column">
            <a href="/account" class="btm_link">
              {% if block.settings.icon_url == blank %}
                <span class="svg-wrapper" aria-hidden="true">
                  {{ 'icon-account.svg' | inline_asset_content }}
                </span>
              {% else %}
                {{ block.settings.icon_url }}
              {% endif %}
              {{ block.settings.caption }}
            </a>
          </div>
        {%- when 'Search_block' -%}
          <div class="sticky-section-column">
            <a href="/search" class="btm_link">
              {% if block.settings.icon_url == blank %}
                <span class="svg-wrapper" aria-hidden="true">
                  {{ 'icon-search.svg' | inline_asset_content }}
                </span>
              {% else %}
                {{ block.settings.icon_url }}
              {% endif %}
              {{ block.settings.caption }}
            </a>
          </div>
        {%- when 'cat_block' -%}
          <div class="sticky-section-column" id="collectionButton">
            <a href="#collectionPopup" class="btm_link">
              {% if block.settings.icon_url == blank %}
                <span class="svg-wrapper" aria-hidden="true">
                  {{ 'icon-layout-grid-line.svg' | inline_asset_content }}
                </span>
              {% else %}
                {{ block.settings.icon_url }}
              {% endif %}
              {{ block.settings.caption }}
            </a>
          </div>
          <div id="collectionPopup" class="collection-popup">
            <span class="close-popup" id="closeCollectionPopupButton">Close</span>
            <div id="custom-menu-section">
              <div class="custom-menu">
                {% for link in linklists[block.settings.menu].links %}
                  <li class="custom-menu-links">
                    <div class="custom-menu-image">
                      {% if link.object.featured_image %}
                        {% assign menu_image_url = link.object.featured_image | image_url: width: 100, height: 100 %}
                        <img src="{{ menu_image_url }}" alt="{{ link.title | escape }}">
                      {% endif %}
                    </div>
                    <a href="{{ link.url }}" class="menu-link">{{ link.title }}</a>
                  </li>
                {% endfor %}
              </div>
            </div>
          </div>
        {%- when 'extended_menu_block' -%}
        <div class="sticky-section-column sticky-section-extended-menu-drawer" id="exmenuButton">
          <a href="#popup" class="btm_link">
             {% if block.settings.icon_url == blank %}
                <span class="svg-wrapper" aria-hidden="true">
                  {{ 'icon-more-2-line.svg' | inline_asset_content }}
                </span>
             {% else %}
                {{ block.settings.icon_url }}
             {% endif %}
              {{ block.settings.caption }}
          </a>
        </div>
        <div id="popup" class="extended-menu">
          <span class="close-popup" id="closePopupButton">Close</span>
          <div class="container">
            {% if block.settings.show_search %}
            <div class="item item-1">
              <a href="#">
                <span class="svg-wrapper" aria-hidden="true">
                  {{ 'icon-search.svg' | inline_asset_content }}
                </span>
                Search
              </a>
            </div>
            {% endif %}
            {% if block.settings.show_wishlist %}
            <div class="item item-2">
              <a href="#">
                <span class="svg-wrapper" aria-hidden="true">
                  {{ 'icon-heart-line.svg' | inline_asset_content }}
                </span>
                Wishlist
              </a>
            </div>
            {% endif %}
            {% if block.settings.show_whatsapp %}
            <div class="item item-3">
              <a href="https://api.whatsapp.com/send?phone={{ block.settings.wa_number }}&text={{ block.settings.wa_message }}">
                <span class="svg-wrapper" aria-hidden="true">
                  {{ 'icon-whatsapp-line.svg' | inline_asset_content }}
                </span>
                Whatsapp
              </a>
            </div>
            {% endif %}
            {% if block.settings.show_track %}
            <div class="item item-4">
              <a href="#">
                <span class="svg-wrapper" aria-hidden="true">
                  {{ 'icon-truck-line.svg' | inline_asset_content }}
                </span>
                Track Order
              </a>
            </div>
            {% endif %}
            {% if block.settings.show_help %}
            <div class="item item-5">
              <a href="#">
                <span class="svg-wrapper" aria-hidden="true">
                  {{ 'icon-question-line.svg' | inline_asset_content }}
                </span>
                Help
              </a>
            </div>
            {% endif %}
          </div>
        </div>
      {%- endcase -%}
    {% endfor %}
  </div>
</body>
<script>
/**
 * Bottom Nav Bar Enhanced Functionality
 * Integrates with theme's cart-icon component and provides enhanced functionality
 */
(function() {
  'use strict';
  
  // Setup global openCartDrawer function for cart button onclick
  if (!window.openCartDrawer) {
    window.openCartDrawer = function() {
      try {
        const cartDrawer = document.querySelector('cart-drawer-component');
        if (cartDrawer && typeof cartDrawer.open === 'function') {
          cartDrawer.open();
        } else {
          console.warn('Cart drawer component not found or does not have open method');
        }
      } catch (error) {
        console.error('Failed to open cart drawer:', error);
      }
    };
  }
  
  // Enhanced menu drawer handling
  function setupMenuDrawer() {
    const menuButtons = document.querySelectorAll('[data-menu-drawer-trigger]');
    menuButtons.forEach(button => {
      button.addEventListener('click', function(e) {
        e.preventDefault();
        // Try to find and trigger the main menu drawer
        const mainMenuTrigger = document.querySelector('.menu-drawer-container .header__icon--menu, [data-menu-drawer-trigger]:not(.btm_link)');
        if (mainMenuTrigger) {
          mainMenuTrigger.click();
        }
      });
    });
  }
  
  // Enhanced popup management
  function initializePopups() {
    // Close collection popup
    const closeCollectionButton = document.getElementById('closeCollectionPopupButton');
    if (closeCollectionButton) {
      closeCollectionButton.addEventListener('click', function(e) {
        e.preventDefault();
        window.location.hash = '';
      });
    }
    
    // Close extended menu popup
    const closeExtendedButton = document.getElementById('closeExtendedPopupButton');
    if (closeExtendedButton) {
      closeExtendedButton.addEventListener('click', function(e) {
        e.preventDefault();
        window.location.hash = '';
      });
    }
    
    // Close popups when clicking outside
    document.addEventListener('click', function(e) {
      const target = e.target;
      if (target.classList.contains('collection-popup') || target.classList.contains('extended-menu')) {
        window.location.hash = '';
      }
    });
    
    // Close popups on escape key
    document.addEventListener('keydown', function(e) {
      if (e.key === 'Escape') {
        window.location.hash = '';
      }
    });
  }
  
  // Legacy cart count update function (for backward compatibility)
  function updateCartCount() {
    fetch('/cart.js')
      .then(response => response.json())
      .then(cart => {
        // Update legacy cart count bubble if it exists
        const cartCountBubble = document.querySelector('#cart-count-bubble');
        if (cartCountBubble) {
          cartCountBubble.textContent = cart.item_count;
        }
        
        // Note: The cart-icon component will handle its own updates via theme events
      })
      .catch(error => {
        console.error('Error fetching cart data:', error);
      });
  }
  
  // Update wishlist counter
  function updateWishlistCounter() {
    try {
      // Update header wishlist counter
      const headerWishlistCounter = document.querySelector('[data-wishlist-counter]');
      // Update bottom menu wishlist counter  
      const bottomWishlistCounter = document.querySelector('[data-wishlist-counter-bottom]');
      
      if (window.wishlist) {
        const count = window.wishlist.getCount ? window.wishlist.getCount() : 0;
        
        // Update header counter
        if (headerWishlistCounter) {
          if (count > 0) {
            headerWishlistCounter.classList.remove('is-hidden');
            headerWishlistCounter.textContent = count;
          } else {
            headerWishlistCounter.classList.add('is-hidden');
          }
        }
        
        // Update bottom menu counter
        if (bottomWishlistCounter) {
          const countSpan = bottomWishlistCounter.querySelector('[aria-hidden="true"]');
          if (count > 0) {
            bottomWishlistCounter.style.display = 'flex';
            if (countSpan) {
              countSpan.textContent = count;
            }
          } else {
            bottomWishlistCounter.style.display = 'none';
          }
        }
      }
    } catch (error) {
      console.error('Failed to update wishlist counter:', error);
    }
  }
  
  // Setup legacy cart button listeners (for backward compatibility)
  function setupLegacyCartListeners() {
    // Legacy cart update listeners for non-cart-icon elements
    const legacyCartButtons = document.querySelectorAll('.add-to-cart-button, .cart-items__remove, .quantity-minus, .quantity-plus, #btn-sticky-cart');
    legacyCartButtons.forEach(button => {
      button.addEventListener('click', () => {
        setTimeout(updateCartCount, 500);
      });
    });
  }
  
  // Initialize everything when DOM is ready
  function initialize() {
    setupMenuDrawer();
    initializePopups();
    updateWishlistCounter();
    setupLegacyCartListeners();
    
    // Listen for wishlist updates
    if (window.wishlist) {
      document.addEventListener('wishlist:updated', updateWishlistCounter);
    }
  }
  
  // Initialize when DOM is ready
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initialize);
  } else {
    initialize();
  }
  
  // Handle page transitions if view transitions are enabled
  document.addEventListener('astro:page-load', initialize);
})();

/******************** Handling click event on the menu drawer icon (vanilla JavaScript):  *********************/
// Get all elements with the class "sticky-section-column-5"
const categorySections = document.querySelectorAll('.sticky-section-menu-drawer');

// Loop through each category section and add a click event listener
categorySections.forEach(section => {
section.addEventListener('click', (e) => {
e.preventDefault(); // Prevent the default click behavior
/******************** Category to Menu  *********************/
// Get the menu drawer container and find the menu icon
const menuDrawerContainer = document.querySelector('.cart-drawer');
const menuIcon = menuDrawerContainer.querySelector('.header-actions__cart-icon--has-cart');

// Simulate a click on the menu icon
if (menuIcon) {
menuIcon.click();
}
});
});

/******************** Handle collection menu for "Collections"  *********************/
document.addEventListener('DOMContentLoaded', function () {
    const collectionButton = document.getElementById('collectionButton');
    const closeCollectionPopupButton = document.getElementById('closeCollectionPopupButton');
    const collectionPopup = document.getElementById('collectionPopup');

    if (collectionButton) {
        collectionButton.addEventListener('click', function (e) {
            e.preventDefault();
            if (collectionPopup.style.display === 'flex') {
                collectionPopup.style.display = 'none';
            } else {
                collectionPopup.style.display = 'flex';
            }
        });
    }

    if (closeCollectionPopupButton) {
        closeCollectionPopupButton.addEventListener('click', function (e) {
            e.preventDefault();
            collectionPopup.style.display = 'none';
        });
    }

    document.addEventListener('click', function (e) {
        if (collectionPopup.style.display === 'flex' && !collectionPopup.contains(e.target) && !collectionButton.contains(e.target)) {
            collectionPopup.style.display = 'none';
        }
    });
});

/******************** For Extended Menu  *********************/
const menuButton = document.getElementById('exmenuButton');
const closePopupButton = document.getElementById('closePopupButton');
const popup = document.getElementById('popup');

menuButton.addEventListener('click', function(e) {
    e.preventDefault();
    // Check if the popup is already open
    if (popup.style.display === 'flex') {
        popup.style.display = 'none';
    } else {
        popup.style.display = 'flex';
    }
  closePopupButton.addEventListener('click', function(e) {
    e.preventDefault();
    popup.style.display = 'none';
});
});
document.addEventListener('click', function(e) {
    if (popup.style.display === 'flex' && !popup.contains(e.target) && !menuButton.contains(e.target)) {
        popup.style.display = 'none';
    }
});

</script>

{% schema %}
{
    "name": "Bottom Nav Bar",
    "settings": [
        {
            "type": "header",
            "content": "General"
        },
        {
            "type": "color",
            "id": "bg_color",
            "label": "Background color",
            "default": "#ffffff"
        },
        {
            "type": "color",
            "id": "icon_color",
            "label": "Icon color",
            "default": "#000"
        },
        {
            "type": "color",
            "id": "color",
            "label": "Text color",
            "default": "#000"
        },
        {
        "type": "range",
        "id": "font_size",
        "min": 5,
        "max": 20,
        "step": 1,
        "unit": "px",
        "label": "Font Size",
        "default": 10
        },
        {
          "type": "range",
          "id": "icon_size",
          "min": 1.5,
          "max": 5,
          "step": 0.1,
          "unit": "rem",
          "label": "Icon Size",
          "default": 2.2
        },
        {
        "type": "header",
        "content": "Spacing"
        },
        {
        "type": "range",
        "id": "height",
        "min": 50,
        "max": 100,
        "step": 10,
        "unit": "px",
        "label": "height",
        "default": 70
        },
        {
            "type": "checkbox",
            "id": "hide-border",
            "label": "Hide Borders",
            "default": false
        }
    ],
    "blocks": [
        {
            "type": "block",
            "name": "Custom Block",
            "limit": 5,
            "settings": [
                {
                    "type": "textarea",
                    "id": "icon_url",
                    "label": "Add Icon",
                    "info": "Remix Icon : [Get Icon](https://remixicon.com/)"
                },
                {
                    "type": "text",
                    "id": "caption",
                    "label": "Caption",
                    "default": "Caption"
                },
                {
                    "type": "url",
                    "id": "url",
                    "label": "Link"
                }
            ]
        },
        {
            "type": "home_block",
            "name": "Home",
            "limit": 1,
            "settings": [
                {
                    "type": "textarea",
                    "id": "icon_url",
                    "label": "Add Icon",
                     "info": "Remix Icon : [Get Icon](https://remixicon.com/)"

                },
                {
                    "type": "text",
                    "id": "caption",
                    "label": "Caption",
                    "default": "Home"
                },
                {
                    "type": "url",
                    "id": "url",
                    "label": "Link"
                }
            ]
        },
        {
            "type": "cart_block",
            "name": "Cart",
            "limit": 1,
            "settings": [
                {
                    "type": "textarea",
                    "id": "icon_url",
                    "label": "Add Icon",
                    "placeholder": "<i class=\"ri-shopping-basket-2-line\"></i>",
                     "info": "Remix Icon : [Get Icon](https://remixicon.com/)"

                },
                {
                    "type": "text",
                    "id": "caption",
                    "label": "Caption",
                    "default": "Cart"
                },
                {
                    "type": "url",
                    "id": "url",
                    "label": "Link"
                }
            ]
        },
        {
            "type": "wishlist_block",
            "name": "Wishlist",
            "limit": 1,
            "settings": [
                {
                    "type": "textarea",
                    "id": "icon_url",
                    "label": "Add Icon",
                    "placeholder": "<i class=\"ri-heart-line\"></i>",
                    "info": "Remix Icon : [Get Icon](https://remixicon.com/)"
                },
                {
                    "type": "text",
                    "id": "caption",
                    "label": "Caption",
                    "default": "Wishlist"
                },
                {
                    "type": "url",
                    "id": "url",
                    "label": "Link"
                }
            ]
        },
        {
            "type": "Menu_block",
            "name": "Drawer Menu Toggle",
            "limit": 1,
            "settings": [
                {
                    "type": "textarea",
                    "id": "icon_url",
                    "label": "Add Icon",
                    "placeholder": "<i class=\"ri-bars-line\"></i>",
                    "info": "Remix Icon : [Get Icon](https://remixicon.com/)"
                },
                {
                    "type": "text",
                    "id": "caption",
                    "label": "Caption",
                    "default": "Menu"
                },
                {
                    "type": "url",
                    "id": "url",
                    "label": "Link"
                }
            ]
        },
        {
            "type": "Account_block",
            "name": "Account",
            "limit": 1,
            "settings": [
                {
                    "type": "textarea",
                    "id": "icon_url",
                    "label": "Add Icon",
                     "placeholder": "<i class=\"ri-account-line\"></i>",
                      "info": "Remix Icon : [Get Icon](https://remixicon.com/)"
                },
                {
                    "type": "text",
                    "id": "caption",
                    "label": "Caption",
                    "default": "Account"
                },
                {
                    "type": "url",
                    "id": "url",
                    "label": "Link"
                }
            ]
        },
        {
            "type": "Search_block",
            "name": "Search",
            "limit": 1,
            "settings": [
                {
                    "type": "textarea",
                    "id": "icon_url",
                    "label": "Add Icon",
                    "placeholder": "<i class=\"ri-search-line\"></i>",
                    "info": "Remix Icon : [Get Icon](https://remixicon.com/)"
                },
                {
                    "type": "text",
                    "id": "caption",
                    "label": "Caption",
                    "default": "Search"
                },
                {
                    "type": "url",
                    "id": "url",
                    "label": "Link"
                }
            ]
        },
      {
            "type": "cat_block",
            "name": "Categories",
            "limit": 1,
            "settings": [
                {
                  "type": "link_list",
                  "id": "menu",
                  "default": "main-menu",
                  "label": "Custom Menu"
                },
                {
                    "type": "textarea",
                    "id": "icon_url",
                    "label": "Add Icon",
                    "placeholder": "<i class=\"ri-search-line\"></i>",
                    "info": "Remix Icon : [Get Icon](https://remixicon.com/)"
                },
                {
                    "type": "text",
                    "id": "caption",
                    "label": "Caption",
                    "default": "Categories"
                },
            ]
        },
      {
            "type": "extended_menu_block",
            "name": "More",
            "limit": 1,
            "settings": [
                {
                    "type": "header",
                    "content": "General"
                },
                {
                    "type": "text",
                    "id": "caption",
                    "label": "Caption",
                    "default": "More"
                },
                {
                    "type": "header",
                    "content": "Search"
                },
                {
                    "type": "checkbox",
                    "id": "show_search",
                    "label": "Search",
                    "default": true
                },
                {
                    "type": "url",
                    "id": "search_url",
                    "label": "Search Link"
                },
                {
                    "type": "header",
                    "content": "Whatsapp"
                },
                {
                    "type": "checkbox",
                    "id": "show_whatsapp",
                    "label": "Whatsapp",
                    "default": true
                },
                {
                    "type": "text",
                    "id": "wa_number",
                    "label": "Whatsapp Number with Country Code",
                     "info": "+911234567890"
                },
                {
                    "type": "text",
                    "id": "wa_message",
                    "label": "Whatsapp Text",
                    "default": "Hi There! I need some help",
                     "info": "Hi There! I need some help"
                },
                {
                    "type": "header",
                    "content": "Wishlist"
                },
                {
                    "type": "checkbox",
                    "id": "show_wishlist",
                    "label": "Wishlist",
                    "default": true
                },
                {
                    "type": "url",
                    "id": "wishlist_url",
                    "label": "Wishlist Link"
                },
                {
                    "type": "header",
                    "content": "Track Order"
                },
                {
                    "type": "checkbox",
                    "id": "show_track",
                    "label": "Track Order",
                    "default": true
                },
                {
                    "type": "url",
                    "id": "track_url",
                    "label": "Track Link"
                },
                {
                    "type": "header",
                    "content": "Help/Contact us"
                },
                {
                    "type": "checkbox",
                    "id": "show_help",
                    "label": "Help",
                    "default": true
                },
                {
                    "type": "url",
                    "id": "help_url",
                    "label": "Help Link"
                }
            ]
        }
    ],
    "max_blocks": 5,
    "presets": [
        {
            "name": "Bottom Nav Bar New",
            "blocks": [
              {
              "type": "home_block"
            },
            {
              "type": "cart_block"
            },
            {
              "type": "Search_block"
            },
            {
              "type": "Menu_block"
            },
            {
              "type": "Account_block"
            }
            ]
        }
    ]
}
{% endschema %}
