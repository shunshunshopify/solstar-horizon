{{ 'hero-video.css' | asset_url | stylesheet_tag }}

{% style %}

  .hero__text-wrap--absolute{
  position: absolute !important;
  width: 100%;
}
  
.hero--{{ section.id }} .hero__media, .hero--{{ section.id }} .hero__media iframe{
    width: 100%;
    height: 100%;
}
  
.hero--{{ section.id }} .hero__title {
  font-size: {{ section.settings.title_size | times: 0.5 }}px;
  margin: 30px 0 0 0;
}

  .hero--{{ section.id }} .hero__subtitle{
    overflow-wrap: anywhere;
    font-size: {{ section.settings.subheading_size | times: 0.7 }}px;
  }
  
@media only screen and (min-width: 769px) {
  .hero--{{ section.id }} .hero__title {
  font-size: {{ section.settings.title_size }}px;
  }
  .hero--{{ section.id }} .hero__subtitle{
  font-size: {{ section.settings.subheading_size }}px;
  }
}

{% if section.settings.overlay_opacity > 0 %}
  .hero--{{ section.id }} .hero__text-wrap:after {
  content: '';
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  background-color: #000;
  opacity: {{ section.settings.overlay_opacity | divided_by: 100.0 }};
  z-index: -1;
  }
{% endif %}

{% if section.settings.video_url == blank %}
.hero__title, .hero__subtitle{
  color: #000;
  opacity: 1;
}
{% endif %}

{% endstyle %}

<div
  data-section-id="{{ section.id }}"
  data-mobile-natural="false"
  class="video-parent-section hero--{{ section.id }} hero--{{ section.settings.section_height }} hero--mobile--{{ section.settings.mobile_height }}"
  >

  <div class="hero__media hero__media--{{ section.id }}" style="position: absolute; top: 0; left: 0; z-index: -1;">

    {% if section.settings.video_url == blank  %}{% else %}
    {% assign extension = section.settings.video_url | slice: -4, 4 %}
    {% if extension == '.mp4' %}
      <video
        id="Mp4Video-{{ section.id }}"
        class="video-div"
        src="{{ section.settings.video_url }}"
        data-type="mp4"
        loop muted playsinline autoplay></video>
    {% else %}

      {% comment %} Extract YouTube video ID from various URL formats {% endcomment %}
      {% assign video_id = '' %}
      {% if section.settings.video_url contains 'youtu.be/' %}
        {% comment %} Format: https://youtu.be/VIDEO_ID {% endcomment %}
        {% assign video_parts = section.settings.video_url | split: 'youtu.be/' %}
        {% if video_parts.size > 1 %}
          {% assign video_id_with_params = video_parts[1] %}
          {% assign video_id = video_id_with_params | split: '?' | first | split: '&' | first %}
        {% endif %}
      {% elsif section.settings.video_url contains 'youtube.com/embed/' %}
        {% comment %} Format: https://www.youtube.com/embed/VIDEO_ID {% endcomment %}
        {% assign video_parts = section.settings.video_url | split: 'embed/' %}
        {% if video_parts.size > 1 %}
          {% assign video_id_with_params = video_parts[1] %}
          {% assign video_id = video_id_with_params | split: '?' | first | split: '&' | first %}
        {% endif %}
      {% elsif section.settings.video_url contains 'youtube.com/watch' %}
        {% comment %} Format: https://www.youtube.com/watch?v=VIDEO_ID {% endcomment %}
        {% if section.settings.video_url contains 'v=' %}
          {% assign video_parts = section.settings.video_url | split: 'v=' %}
          {% if video_parts.size > 1 %}
            {% assign video_id_with_params = video_parts[1] %}
            {% assign video_id = video_id_with_params | split: '&' | first %}
          {% endif %}
        {% endif %}
      {% endif %}


      <style>
        #shopify-section-{{ section.id }}{
          position: relative !important;
/*           padding-bottom: 56.25% !important;
          height: 0 !important;
          max-width: 1920px !important;
          margin: 0 auto !important; */
        }
        .hero--{{ section.id }} .hero__media {
          height: 100%;
          width: 100%;
        }
        .hero--{{ section.id }} .hero__media iframe {
          position: absolute !important;
/*           top: 0 !important;
          left: 0 !important;
          width: 100% !important;
          height: 100% !important;
          max-height: 1080px !important; */
          top: 50%;
          left: 50%;
          transform: translate(-50%, -50%);
        }
      </style>

      <script>
        // YouTube Video Implementation
        document.addEventListener('DOMContentLoaded', function() {
          {% if video_id != blank %}
            const videoId = '{{ video_id }}';
            
            if (!videoId.trim()) {
              console.error('Invalid YouTube video ID extracted from URL: {{ section.settings.video_url }}');
              return;
            }
            
            // Check if YouTube API is already loaded
            function initializeYouTubePlayer() {
              if (window.YT && window.YT.Player) {
                createPlayer();
              } else {
                // Load YouTube IFrame API if not already loaded
                if (!window.YT && !document.querySelector('script[src*="youtube.com/iframe_api"]')) {
                  const tag = document.createElement('script');
                  tag.src = 'https://www.youtube.com/iframe_api';
                  const firstScriptTag = document.getElementsByTagName('script')[0];
                  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
                }
                
                // Set up callback for when API loads
                window.onYouTubeIframeAPIReady = createPlayer;
              }
            }
            
            function createPlayer() {
              const player = new YT.Player('youtube-player-{{ section.id }}', {
                height: '100%',
                width: '100%',
                videoId: videoId,
                playerVars: {
                  autoplay: {{ section.settings.enable_autoplay | default: 0 }},
                  mute: {{ section.settings.enable_autoplay | default: 0 }},
                  loop: {{ section.settings.enable_loop | default: 0 }},
                  playlist: videoId, // Required for loop
                  controls: {{ section.settings.show_controls | default: 1 }},
                  showinfo: 0,
                  rel: 0,
                  modestbranding: 1,
                  playsinline: 1,
                  fs: 0
                },
                events: {
                  onReady: function(event) {
                    console.log('YouTube player ready for section {{ section.id }}');
                    if ({{ section.settings.enable_autoplay | default: false }}) {
                      event.target.mute();
                      event.target.playVideo();
                    }
                    // Trigger resize after player is ready
                    setTimeout(resizeVideo, 100);
                  },
                  onStateChange: function(event) {
                    if (event.data === YT.PlayerState.ENDED && {{ section.settings.enable_loop | default: false }}) {
                      event.target.playVideo();
                    }
                  },
                  onError: function(event) {
                    console.error('YouTube player error:', event.data, 'for video ID:', videoId);
                    // Error handling for different error codes
                    switch(event.data) {
                      case 2:
                        console.error('Invalid video ID: ' + videoId);
                        break;
                      case 5:
                        console.error('HTML5 player error');
                        break;
                      case 100:
                        console.error('Video not found or private');
                        break;
                      case 101:
                      case 150:
                        console.error('Video cannot be embedded');
                        break;
                    }
                  }
                }
              });
              
              // Store player reference for resize function
              window['player_{{ section.id }}'] = player;
            }
            
            // Resize function
            function resizeVideo() {
              const container = document.getElementById('youtube-player-{{ section.id }}');
              if (container && container.querySelector('iframe')) {
                const iframe = container.querySelector('iframe');
                const parentContainer = container.parentElement;
                const containerWidth = parentContainer.offsetWidth;
                const containerHeight = parentContainer.offsetHeight;
                const aspectRatio = 16 / 9;
                
                let newWidth, newHeight;
                
                if (containerWidth / containerHeight > aspectRatio) {
                  newWidth = containerWidth;
                  newHeight = containerWidth / aspectRatio;
                } else {
                  newWidth = containerHeight * aspectRatio;
                  newHeight = containerHeight;
                }
                
                iframe.style.width = newWidth + 'px';
                iframe.style.height = newHeight + 'px';
                iframe.style.position = 'absolute';
                iframe.style.left = (containerWidth - newWidth) / 2 + 'px';
                iframe.style.top = (containerHeight - newHeight) / 2 + 'px';
              }
            }
            
            // Event listeners
            window.addEventListener('resize', resizeVideo);
            document.addEventListener('shopify:section:load', function() {
              if (window['player_{{ section.id }}']) {
                setTimeout(resizeVideo, 100);
              }
            });
            
            // Initialize the player
            initializeYouTubePlayer();
            
          {% else %}
            console.error('No valid YouTube video ID found for URL: {{ section.settings.video_url }}');
          {% endif %}
        });
      </script>

      <div id="youtube-player-{{ section.id }}" class="youtube-video-container"></div>
      
    {%- endif -%}
{% endif %}

</div>

  <div class="hero__text-wrap{% if section.settings.section_height == '16-9' %} hero__text-wrap--absolute{% endif %}">
    <div class="hero-text-page-width">
      <div class="hero__text-content {{ section.settings.text_align }}">
        {%- unless section.settings.title == blank -%}
          <h2 class="hero__title">
            {{ section.settings.title | newline_to_br }}
          </h2>
        {%- endunless -%}
        {%- unless section.settings.subheading == blank -%}
          <div class="hero__subtitle">
            {{ section.settings.subheading | escape }}
          </div>
        {%- endunless -%}
        {%- if section.settings.link_text != blank -%}
          <div class="hero__link color-{{ section.settings.color_scheme }}">
            {%- if section.settings.link != blank -%}
              <a href="{{ section.settings.link }}" class="{{ section.settings.style_class }}">
                {{ section.settings.link_text }}
              </a>
            {%- else -%}
              <span class="{{ section.settings.style_class }}" style="cursor: default;">
                {{ section.settings.link_text }}
              </span>
            {%- endif -%}
          </div>
        {%- endif -%}

      </div>
    </div>
  </div>
</div>
 
{% schema %}
{
  "name": "Hero video",
  "class": "index-section--hero",
  "settings": [
    {
      "type": "textarea",
      "id": "title",
      "label": "Heading",
      "default": "This is heading"
    },
    {
      "type": "range",
      "id": "title_size",
      "label": "Heading text size",
      "default": 80,
      "min": 40,
      "max": 100,
      "unit": "px"
    },
    {
      "type": "text",
      "id": "subheading",
      "label": "Subheading",
      "default": "This is subheading"
    },
    {
      "type": "range",
      "id": "subheading_size",
      "label": "Subheading text size",
      "default": 40,
      "min": 16,
      "max": 60,
      "unit": "px"
    },
    {
      "type": "text",
      "id": "link_text",
      "label": "Button text",
      "default": "Button"
    },
    {
      "type": "url",
      "id": "link",
      "label": "Button link"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:settings.color_scheme",
      "default": "scheme-1"
    },
    {
      "type": "select",
      "id": "style_class",
      "label": "t:settings.style",
      "options": [
        {
          "value": "button",
          "label": "t:options.primary"
        },
        {
          "value": "button-secondary",
          "label": "t:options.secondary"
        },
        {
          "value": "link",
          "label": "t:options.link"
        }
      ],
      "default": "button"
    },
    {
      "type": "select",
      "id": "text_align",
      "label": "Text alignment",
      "default": "vertical-center horizontal-center",
      "options": [
        {
          "value": "vertical-center horizontal-left",
          "label": "Center left"
        },
        {
          "value": "vertical-center horizontal-center",
          "label": "Center"
        },
        {
          "value": "vertical-center horizontal-right",
          "label": "Center right"
        },
        {
          "value": "vertical-bottom horizontal-left",
          "label": "Bottom left"
        },
        {
          "value": "vertical-bottom horizontal-center",
          "label": "Bottom center"
        },
        {
          "value": "vertical-bottom horizontal-right",
          "label": "Bottom right"
        }
      ]
    },
    {
      "type": "text",
      "id": "video_url",
      "label": "Background video link",
      "default": "https://youtu.be/_9VUPq3SxOc?si=VS8L5ubdPp7rvEUH",
      "info": "Youtube or .MP4"
    },
    {
      "type": "range",
      "id": "overlay_opacity",
      "label": "Text protection",
      "info": "Darkens your image to ensure your text is readable",
      "default": 0,
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "%"
    },
    {
      "type": "select",
      "id": "section_height",
      "label": "Desktop height",
      "default": "650px",
      "options": [
        {
          "label": "16:9",
          "value": "16-9"
        },
        {
          "label": "450px",
          "value": "450px"
        },
        {
          "label": "550px",
          "value": "550px"
        },
        {
          "label": "650px",
          "value": "650px"
        },
        {
          "label": "750px",
          "value": "750px"
        },
        {
          "label": "Full screen",
          "value": "100vh"
        }
      ]
    },
    {
      "type": "select",
      "id": "mobile_height",
      "label": "Mobile height",
      "default": "auto",
      "options": [
        {
          "label": "Auto",
          "value": "auto"
        },
        {
          "label": "250px",
          "value": "250px"
        },
        {
          "label": "300px",
          "value": "300px"
        },
        {
          "label": "400px",
          "value": "400px"
        },
        {
          "label": "500px",
          "value": "500px"
        },
        {
          "label": "Full screen",
          "value": "100vh"
        }
      ]
    },
    {
      "type": "header",
      "content": "YouTube Video Settings"
    },
    {
      "type": "checkbox",
      "id": "enable_autoplay",
      "label": "Enable autoplay",
      "default": true,
      "info": "Videos will be muted for autoplay to work"
    },
    {
      "type": "checkbox",
      "id": "enable_loop",
      "label": "Enable loop",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_controls",
      "label": "Show video controls",
      "default": false
    }
  ],
  "presets": [
    {
      "name": "Hero video"
    }
  ]
}
{% endschema %}
